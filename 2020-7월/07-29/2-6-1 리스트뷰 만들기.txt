2-6-1 리스트뷰 만들기
1. 왜 굳이 선택위젯이라는 이름으로 구분할까?
=> 안드로이드에서는 여러 아이템 중의 하나를 선택하는 선택위젯은 별도의 패턴을 사용함
- 여러개의 아이템 중에서 하나를 선택하는 방식의 선택 위젯은 어댑터를 사용하여야 함
- 이 어댑터에서 데이터를 관리하도록 해야 할 뿐만 아니라 화면에 보여지는 뷰도 어댑터의 getView()메소드에서 결정함
- 선택위젯의 가장 큰 특징은 원본 데이터를 위젯에 직접 설정하지 않고 어댑터하는 클래스를 사용하도록 되어 있다는 점으로 이 패턴을 잘 기억해 두어야 함
2. 대표적인 선택 위젯
- 리스트뷰
- 스피너
- 그리드뷰
- 갤러리
3. 리스트뷰(껍데기)로 보여줄 때 해야 할 일들
(1) 아이템을 위한 XML레이아웃 정의하기
- 리스트뷰에 들어갈 각 아이템의 레이아웃을 XML로 정의함
(2) 아이템을 위한 뷰 정의하기
- 리스트뷰에 들어갈 각 아이템을 하나의 뷰로 정의. 이 뷰는 여러 개의 뷰를 담고 있는 뷰그룹이어야 함
- 이것은 부분화면과 같아서 (1)번에서 정의한 XML 레이아웃을 인플레이션 후 설정해야함
(3) 어댑터(실제 데이터 관리) 정의하기
- 데이터 관리 역할을 하는 어댑터 클래스를 만들고 그 안에 각 아이템으로 표시할 뷰를 리턴하는 getView()메소드를 정의함
(4) 리스트 뷰 정의하기
- 화면에 보여줄 리스트뷰를 만들고 그 안에 데이터가 선택되었을 때 호출돌 리스너 객체를 정의함
4. activity_main.xml
- litView를 추가
5. MainActivity.java
```java
package com.example.mylist;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ListView;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ListView listView = (ListView) findViewById(R.id.listView);//리스트 뷰 객체 찾기


    }

    class SingerAdapter extends BaseAdapter{
        ArrayList<String> items = new ArrayList<String>();
        @Override
        public int getCount() {
            return 0;
        }

        @Override
        public Object getItem(int i) {
            return null;
        }

        @Override
        public long getItemId(int i) {
            return 0;
        }

        @Override
        public View getView(int i, View view, ViewGroup viewGroup) {
            return null;
        }
    }

}
```
(-SingerAdapter같은 것들은 주로 BaseAdapter를 상속
- SingerAdapter에서 오른쪽 마우스 키>Generate>메서드)
6. SingerItem.java새로 만들어서 마우스 오른쪽 키> Generate> Constructor > 생성한 변수 선택
```java
package com.example.mylist;

public class SingerItem {

    String name;
    String mobile;

    public SingerItem(String name, String mobile) {
        this.name = name;
        this.mobile = mobile;
    }
}
```
7. Generate>getter and setter>두 개 선택하고 ok
```java
package com.example.mylist;

public class SingerItem {

    String name;
    String mobile;

    public SingerItem(String name, String mobile) {
        this.name = name;
        this.mobile = mobile;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getMobile() {
        return mobile;
    }

    public void setMobile(String mobile) {
        this.mobile = mobile;
    }
}
```
8. Generate>toString():데이터 확인
```java
package com.example.mylist;

public class SingerItem {

    String name;
    String mobile;

    public SingerItem(String name, String mobile) {
        this.name = name;
        this.mobile = mobile;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getMobile() {
        return mobile;
    }

    public void setMobile(String mobile) {
        this.mobile = mobile;
    }

    @Override
    public String toString() {
        return "SingerItem{" +
                "name='" + name + '\'' +
                ", mobile='" + mobile + '\'' +
                '}';
    }
}
```
9. MainActivity.java
``java
package com.example.mylist;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ListView;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ListView listView = (ListView) findViewById(R.id.listView);//리스트 뷰 객체 찾기


    }

    class SingerAdapter extends BaseAdapter{
        ArrayList<SingerItem> items = new ArrayList<SingerItem>();
        @Override
        public int getCount() {
            return 0;
        }

        @Override
        public Object getItem(int i) {
            return null;
        }

        @Override
        public long getItemId(int i) {
            return 0;
        }

        @Override
        public View getView(int i, View view, ViewGroup viewGroup) {
            return null;
        }
    }

}
```
10. singer_item.xml에서 아이템을 위한 부분화면 코드
```java
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal">
    
    <ImageView
        android:layout_width="80dp"
        android:layout_height="80dp"
        android:src="@mipmap/ic_launcher"/>
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:layout_marginLeft="10dp">
        
        <TextView
            android:id="@+id/textView"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="이름"
            android:textSize="30dp"
            android:textColor="@color/colorPrimaryDark"/>
        <TextView
            android:id="@+id/textView2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:text="전화번호"
            android:textSize="24dp"
            android:textColor="@android:color/holo_orange_dark"/>
        
        
    </LinearLayout>

    /* 아이템을 위한 레이아웃 */
</LinearLayout>
```
11. SingerItemView.java를 새로 생성
- LinearLayout상속
- 오른쪽 마우스 > Generate > Constructor > 두 개 선택하고 ok
12. 초기화를 위한 메서드 = private void init
13. SinerItemView.java 총 코드정리
```java
package com.example.mylist;

import android.content.Context;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.widget.LinearLayout;
import android.widget.TextView;

import androidx.annotation.Nullable;

public class SingerItemView extends LinearLayout {
    TextView textView;TextView textView2;//변수 전체 선언
    public SingerItemView(Context context) {
        super(context);
        init(context);
    }

    public SingerItemView(Context context, @Nullable AttributeSet attrs) {
        super(context, attrs);
        init(context);
    }

    private void init(Context context){
        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);///캐스팅(LayoutInflater)
        inflater.inflate(R.layout.singer_item,this,true);

        textView = (TextView) findViewById(R.id.textView); // singer_item에 넣어 놓은 textview 참조.
        textView2 = (TextView) findViewById(R.id.textView2);
    }

    public void setName(String name){
        textView.setText(name);
    }
    public void setMobile(String mobile){
        textView2.setText(mobile);
    }

}
```
13. 