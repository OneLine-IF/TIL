# 4. 화면 내비게이션 - 1. 프래그먼트 이해하기 - 1) 프래그먼트 만들기
1. 한 화면에 여러 부분화면을 넣는 방식
- 태블릿과 같이 큰 화면에서는 한 화면에 여러 부분화면을 넣는 것이 효율적임
2. 부분화면을 독립적으로 만들기(프래그먼트)
- 프래그먼트는 부분화면을 독립적으로 만들어주며 액티비티를 그대로 본떠 만든 것임
-  프래그먼트도 인텐트 처럼 프래그먼트 매니저에 요청하여 메소드를 요청해야함.
3. 프래그먼트를 이용해 화면 전환하기
- 하나의 액티비티에 하나의 프래그먼트를 전체 화면으로 보여주면 시스템과 관계없이 전체 화면을 전환하는 효과를 만들 수 있음.
4. 프래그먼트를 화면에 추가하기
- 프래그먼트는 액티비티 위에 올라가야 프래그먼트로 동작함
- 인플레이션을 위한 별도의 콜백 메소드를 제공함 
5. java파일과 xml 파일 만들어서 인플레이션하여 연결하기
- MainFragment.java
```java
package com.example.myfragment;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

public class MainFragment extends Fragment {
    //Generate > Overrride Methods > onCreateView


    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.fragment_main,container,false);
        return rootView;//인플래이션한 rootView 를 리턴해주면 Fragment 의 화면으로 보이게 됨, rootView 는 프래그먼트 안에 들어가는 최상위 레이아웃
    }
}
```
6.activity_main.xml에 fragment 추가
```
java
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:text="시작"/>
    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_below="@+id/button">
        <fragment
            android:id="@+id/main_fragment"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:name="com.example.myfragment.MainFragment"/>
    </FrameLayout>
</RelativeLayout>
```
7. 프래그먼트를 추가하는 방법은 두 가지가 있는데 한 가지는 xml에 포함시키는 거고(6번), 다른 한 가지는 java파일에 넣는 것이다(7번)
```java
package com.example.myfragment;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button button = (Button)findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//버튼 클릭 시 프래그 먼트가 나옴.
                MainFragment fragment1 = new MainFragment();
                getSupportFragmentManager().beginTransaction().add(R.id.container,fragment1).commit();//프래그먼트를 사용 할 때는 프래그먼트 매니저를 이용,어디에 들어갈지, 그곳에 fragment1 을 넣으라고 하는 것, 마지막에 commit 을 해주어야 실행이 됨.


            }
        });
    }
}
```
8. 두 개의 프래그 먼트가 번갈아 가며 나올 수 있게 만들기
- fragment_main.xml 에 버튼 추가
- activity_main.xml 에 버튼 추가
- MainActivity.java
```
java
package com.example.myfragment;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;

public class MainActivity extends AppCompatActivity {
    MainFragment fragment1;
    MenuFragment fragment2;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        fragment1 = new MainFragment();
        fragment2 = new MenuFragment();

        Button button = (Button)findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//버튼 클릭 시 프래그 먼트가 나옴.

                getSupportFragmentManager().beginTransaction().replace(R.id.container,fragment1).commit();//프래그먼트를 사용 할 때는 프래그먼트 매니저를 이용,어디에 들어갈지, 그곳에 fragment1 을 넣으라고 하는 것, 마지막에 commit 을 해주어야 실행이 됨.
                //replace 는 기존의 것을 대체해줌.

            }
        });

        Button button2 = (Button)findViewById(R.id.button2);
        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//버튼 클릭 시 프래그 먼트가 나옴.

                getSupportFragmentManager().beginTransaction().replace(R.id.container,fragment2).commit();//프래그먼트를 사용 할 때는 프래그먼트 매니저를 이용,어디에 들어갈지, 그곳에 fragment1 을 넣으라고 하는 것, 마지막에 commit 을 해주어야 실행이 됨.

            }
        });

    }
}
``` 
- MainFragment.java
```java
package com.example.myfragment;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

public class MainFragment extends Fragment {
    MainActivity activity;
    //Generate > Override Methods > onAttach, onDetach
    //onAttach 가 onCreate 보다 먼저 실행됨. 프래그먼트가 액티비티 위에 올라간다는 것을 의미, onDetach 는 다시 내려온다는 것을 의미.

    @Override
    public void onAttachFragment(@NonNull Fragment childFragment) {
        super.onAttachFragment(childFragment);
        activity = (MainActivity) getActivity();//이 프래그먼트가 동작하는 액티비티(여기서는 메인액티비티)를 참조할 수 있음.

    }

    @Override
    public void onDetach() {
        super.onDetach();
        activity = null;
    }


    //Generate > Override Methods > onCreateView

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.fragment_main,container,false);
        Button button = rootView.findViewById(R.id.button);//이 버튼은 프래그먼트 안에 들어가 있는 버튼.
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                
            }
        });
        return rootView;//인플래이션한 rootView 를 리턴해주면 Fragment 의 화면으로 보이게 됨, rootView 는 프래그먼트 안에 들어가는 최상위 레이아웃
    }
}
```
- MainActivity.java
```java
package com.example.myfragment;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;

public class MainActivity extends AppCompatActivity {
    MainFragment fragment1;
    MenuFragment fragment2;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        fragment1 = new MainFragment();
        fragment2 = new MenuFragment();

        Button button = (Button)findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//버튼 클릭 시 프래그 먼트가 나옴.

                getSupportFragmentManager().beginTransaction().replace(R.id.container,fragment1).commit();//프래그먼트를 사용 할 때는 프래그먼트 매니저를 이용,어디에 들어갈지, 그곳에 fragment1 을 넣으라고 하는 것, 마지막에 commit 을 해주어야 실행이 됨.
                //replace 는 기존의 것을 대체해줌.

            }
        });

        Button button2 = (Button)findViewById(R.id.button);
        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {//버튼 클릭 시 프래그 먼트가 나옴.

                getSupportFragmentManager().beginTransaction().replace(R.id.container,fragment2).commit();//프래그먼트를 사용 할 때는 프래그먼트 매니저를 이용,어디에 들어갈지, 그곳에 fragment1 을 넣으라고 하는 것, 마지막에 commit 을 해주어야 실행이 됨.

            }
        });

    }
    public void onFragmentChange(int index){
        if(index == 0){
            //MainFragment 를 띄워주기
            getSupportFragmentManager().beginTransaction().replace(R.id.container,fragment1).commit();
        }else if(index == 1){
            getSupportFragmentManager().beginTransaction().replace(R.id.container,fragment2).commit();
        }
    }

}
```
- MainFragment.java
```
java
package com.example.myfragment;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

public class MainFragment extends Fragment {
    MainActivity activity;
    //Generate > Override Methods > onAttach, onDetach
    //onAttach 가 onCreate 보다 먼저 실행됨. 프래그먼트가 액티비티 위에 올라간다는 것을 의미, onDetach 는 다시 내려온다는 것을 의미.

    @Override
    public void onAttachFragment(@NonNull Fragment childFragment) {
        super.onAttachFragment(childFragment);
        activity = (MainActivity) getActivity();//이 프래그먼트가 동작하는 액티비티(여기서는 메인액티비티)를 참조할 수 있음.

    }

    @Override
    public void onDetach() {
        super.onDetach();
        activity = null;
    }


    //Generate > Override Methods > onCreateView

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.fragment_main,container,false);
        Button button = rootView.findViewById(R.id.button);//이 버튼은 프래그먼트 안에 들어가 있는 버튼.
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //버튼이 클릭됐을 때 동작하도록 요청을 보내야하는데 이건 시스템이 아니라 intent 가 안됨. 따라서 MainActivity.java 에 메서드를 만들어주어야함.
                activity.onFragmentChange(1);//메뉴프레그먼트가 보이게됨.
            }
        });
        return rootView;//인플래이션한 rootView 를 리턴해주면 Fragment 의 화면으로 보이게 됨, rootView 는 프래그먼트 안에 들어가는 최상위 레이아웃
    }
}
```
(MainActivity에서 프래그먼트를 띄워주면 Fragment에서 받는 것)