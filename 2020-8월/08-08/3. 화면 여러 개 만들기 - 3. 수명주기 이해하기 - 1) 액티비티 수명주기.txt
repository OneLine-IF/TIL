3. 화면 여러 개 만들기 - 3. 수명주기 이해하기 - 1) 액티비티 수명주기
1. 수명주기
(1) 실행
- 화면 상에 액티비티가 보이면서 실행되어 있는 상태. 액티비티 스택의 최상위에 있으며 포커스를 가지고 있음.
(2) 일시 중지
- 사용자에게 보이기는 하지만 다른 액티비티가 위에 있어 포커스를 받지 못하는 상태. 대화상자가 위에 있어 일부가 가ㅈ려져 있는 경우에 해당함.
(3) 중지
- 다른 액티비티에 의해 완전히 가려져 보이지 않는 상태
2. 수명주기에 따른 상태 변화
(1) 새로운 액티비티
(2) 실행
(3) 일시정지
(4) 중지
(5) 소멸
3. 버튼하나 추가 후 MainActivity.java
```java
package com.example.lifecycle;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Toast.makeText(this,"onCreate() 호출됨.",Toast.LENGTH_LONG).show();

        Button button = (Button)findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                finish();
            }
        });
    }

    //Generate > Override Method(재정의) > onDestroy()... 선택. > 수명주기에 관련된 메서드 자동 호출됨.


    @Override
    protected void onDestroy() {
        super.onDestroy();
        Toast.makeText(this,"onDestroy() 호출됨.",Toast.LENGTH_LONG).show();
        //onCreate 와 반대.
    }

    @Override
    protected void onStart() {
        super.onStart();
        Toast.makeText(this,"onStart() 호출됨.",Toast.LENGTH_LONG).show();
    }

    @Override
    protected void onStop() {
        super.onStop();
        Toast.makeText(this,"onStop() 호출됨.",Toast.LENGTH_LONG).show();
    }

    @Override
    protected void onPause() {
        super.onPause();
        Toast.makeText(this,"onPause() 호출됨.",Toast.LENGTH_LONG).show();
    }

    @Override
    protected void onResume() {
        super.onResume();
        Toast.makeText(this,"onResume() 호출됨.",Toast.LENGTH_LONG).show();
    }

    //각각의 메소드들이 호출될 때 토스트가 띄워질 것.
}
```